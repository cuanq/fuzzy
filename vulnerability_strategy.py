"""
File: test.py
Authors: Zack Downs <zjd2035@gmail.com>, Danielle Gonzalez <dng2551@rit.edu>, Stephan Wlodarczyk <stephanjwlodarczyk@gmail.com>
"""
import requests
from custom_auth import *

class VulnerabilityStrategy:

	def __init__(self, forms, vulnerability, args):
		self.vulnerability = vulnerability 
		self.forms = forms
		self.args = args

	def run(self):
		self.vulnerability.run(self.forms, self.args, self)

	def getVectors(self):
		vectors = None

		try:
			vectors = open(self.args["vectors"], "r").read().splitlines()
		except:
			print ("Error involving vector file.")

		return vectors

	def runVector(self, form, vector):
		session = requests.Session()
		payload = {}
		action = form["action"]
		method = form["method"]
		response = None 
		
		for form_field in form["inputs"]:
			payload[form_field] = vector
		
		try:
			if method.lower() == "post":
				response = session.post(form["url"] + "/" + action, data = payload)

			elif method.lower() == "get": 
				response = session.get(form["url"] + "/" + action, params = payload)

		except requests.exceptions.TooManyRedirects:
			pass

		if response != None:
			response.cookies = session.cookies

		return response